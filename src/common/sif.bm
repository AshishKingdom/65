function sif_read(filename$)
    fh = freefile
    if not _fileexists(filename$) then error 53 'FILE NOT FOUND
    open filename$ for binary as #fh

    dim header as sif_header_t
    get #fh, , header
    if header.version <> SIF_VERSION then error 64 'BAD FILE NAME

    ast_last_constant = header.num_constants
    redim ast_constants(ast_last_constant) as string
    redim ast_constant_types(ast_last_constant) as long
    read_string_array fh, ast_constants()
    read_long_array fh, ast_constant_types()

    ast_last_node = header.num_ast_nodes
    redim ast_nodes(ast_last_node) as ast_node_t
    redim ast_children(ast_last_node) as string
    for i = 1 to ast_last_node
        get #fh, , ast_nodes(i)
    next i
    read_string_array fh, ast_children()

    htable_create htable, header.num_hentries * 1.25
    dim he as hentry_t
    for i = 1 to header.num_hentries
        get #fh, , l&
        s$ = space$(l&)
        get #fh, , s$
        get #fh, , he
        htable_add_hentry s$, he
    next i

    type_last_signature = header.num_signatures
    redim type_signatures(type_last_signature) as type_signature_t
    for i = 1 to type_last_signature
        get #fh, , type_signatures(i)
    next i

    close #fh

    sif_read = header.root_node
end function

sub sif_write(filename$, root_node)
    fh = freefile
    open filename$ for binary as #fh

    dim header as sif_header_t
    header.version = SIF_VERSION
    header.num_constants = ast_last_constant
    header.num_ast_nodes = ast_last_node
    header.root_node = root_node
    header.num_hentries = htable.elements
    header.num_signatures = type_last_signature
    put #fh, , header

    write_string_array fh, ast_constants(), ast_last_constant
    write_long_array fh, ast_constant_types(), ast_last_constant

    for i = 1 to ast_last_node
        put #fh, , ast_nodes(i)
    next i
    write_string_array fh, ast_children(), ast_last_node

    for i = 1 to htable.elements
        l& = len(htable_names(i))
        put #fh, , l&
        put #fh, , htable_names(i)
        put #fh, , htable_entries(i)
    next i

    for i = 1 to type_last_signature
        put #fh, , type_signatures(i)
    next i

    close #fh
end sub

sub read_long_array(fh, arr() as long)
    for i = 1 to ubound(arr)
        get #fh, , arr(i)
    next i
end sub

sub write_long_array(fh, arr() as long, size)
    for i = 1 to size
        put #fh, , arr(i)
    next i
end sub

sub read_string_array(fh, arr() as string)
    dim l as long
    for i = 1 to ubound(arr)
        get #fh, , l
        arr(i) = space$(l)
        get #fh, , arr(i)
    next i
end sub
    
sub write_string_array(fh, arr() as string, size)
    dim l as long
    for i = 1 to size
        l = len(arr(i))
        put #fh, , l
        put #fh, , arr(i)
    next i
end sub
