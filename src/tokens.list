generic unknown ; nosym

generic newline ; direct nosym
generic ,(comma); direct nosym

# Literals have a hard-coded precedence of 1, which needs to be lower than any other
# prefix <name> <precedence>
# infix <name> <precedence> <associativity>

# The precedence of NOT may surprise you; NOT 2 + 3 is NOT (2 + 3).
prefix not          2
infix and           2   left
infix or            2   left
infix xor           2   left
infix eqv           2   left
infix imp           2   left
infix =(equals)     3   left ; direct
infix <(cmp_lt)     3   left ; direct
infix >(cmp_gt)     3   left ; direct
infix >=(cmp_gteq)  3   left ; direct
infix <=(cmp_lteq)  3   left ; direct
infix +(plus)       4   left ; direct
infix -(dash)       4   left ; direct
infix *(star)       5   left ; direct
infix /(slash)      5   left ; direct
# Note -3^2 = -(3^2)
prefix negative     6
infix ^(power)      7   left ; direct

# Parentheses don't have any real meaning, they only direct the parsing
generic oparen ; direct nosym
generic cparen ; direct nosym

# Numbers
# numint: 1234, numdec: 12.34, numexp: 12.3E4, numbase: &H1234
literal numint ; direct
literal numdec ; direct
literal numexp ; direct
literal numbase ; direct

# A string
literal string ; direct

# Type symbols
# No _BIT because it's messy and barely used
generic byte_sfx        ; direct nosym
generic integer_sfx     ; direct nosym
generic long_sfx        ; direct nosym
generic integer64_sfx   ; direct nosym
# Unsigned equivalents. I'm undecided on how useful these actually are
generic ubyte_sfx       ; direct nosym
generic uinteger_sfx    ; direct nosym
generic ulong_sfx       ; direct nosym
generic uinteger64_sfx  ; direct nosym

generic single_sfx      ; direct nosym
generic double_sfx      ; direct nosym
generic float_sfx       ; direct nosym
generic string_sfx      ; direct nosym


# Some keywords for testing with
generic if
generic then
generic else

generic do
generic loop
generic until
generic while
generic wend

generic for
generic to
generic step
generic next

function chr string ubyte
function left string string,number

# end is a little bit of a hack, really. At this stage pretend it's always a
# call to the END function, but in parsing we'll have an exception for gobbling END IF etc.
generic end

generic beep
generic _autodisplay
