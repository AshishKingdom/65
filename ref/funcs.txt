ABS (function) converts any negative numerical value to a positive value.
_ACOS (function) arccosine function returns the angle in radians based on an input COSine value range from -1 to 1.
_ACOSH (function) Returns the nonnegative arc hyperbolic cosine of x, expressed in radians.
_ALPHA32 (function) returns the alpha channel transparency level of a color value used on a 32 bit screen page or image.
_ALPHA (function) returns the alpha channel transparency level of a color value used on a screen page or image.
_ARCCOT (function) is the inverse function of the cotangent. . http://mathworld.wolfram.com/InverseCosecant.html
_ARCCSC (function) is the inverse function of the cosecant. http://mathworld.wolfram.com/InverseCosecant.html
_ARCSEC (function) is the inverse function of the secant. http://mathworld.wolfram.com/InverseSecant.html
_ASIN (function) Returns the principal value of the arc sine of x, expressed in radians.
_ASINH (function) Returns the arc hyperbolic sine of x, expressed in radians.
_ATAN2 (function) Returns the principal value of the arc tangent of y/x, expressed in radians.
_ATANH (function) Returns the arc hyperbolic tangent of x, expressed in radians.
ATN (function) or arctangent returns the angle in radians of a numerical tangent value. 
_AXIS (function) returns a SINGLE value between -1 and 1 indicating the maximum distance from the device axis center, 0. 
_BACKGROUNDCOLOR (function) returns the current screen page background color.
_BLUE32 (function) returns the blue component intensity of a 32-bit color value.
_BLUE (function) function returns the palette or the blue component intensity of a 32-bit image color.
_BUTTONCHANGE (function) returns -1 when a device button has been pressed and 1 when released. Zero indicates no change.
_BUTTON (function) returns -1 when a controller device button is pressed and 0 when button is released.
CDBL (function) returns the closest DOUBLE value of a number.
_CEIL (function) Rounds x upward, returning the smallest integral value that is not less than x.
CHR$ (function) returns a text string character by the specified ASCII code number.
CINT (function) returns the closest INTEGER value of a numerical value.
CLNG (function) returns the closest LONG value of a numerical value.
COMMAND$ (function) returns the DOS commandline arguments passed when a program is run.
_COMMANDCOUNT (function) returns the number of arguments passed to the compiled program from the command line.
_CONNECTED (function) returns the status of a TCP/IP connection handle.
_CONNECTIONADDRESS$ (TCP/IP function) returns a connected user's STRING IP address value using the handle.
_COPYIMAGE (function) copies an image handle value to a new designated handle.
COS (function) returns the cosine of a radian angle value.
_COSH (function) Returns the hyperbolic cosine of x radians. http://mathworld.wolfram.com/HyperbolicCosine.html
_COT (function) the mathematical function cotangent defined by 1/TAN. http://mathworld.wolfram.com/Cotangent.html
_COTH (function) Returns the hyperbolic cotangent. http://mathworld.wolfram.com/HyperbolicCotangent.html
_CSC (function) the mathematical function cosecant defined by 1/SIN. http://mathworld.wolfram.com/Cosecant.html
_CSCH (function) Returns the hyperbolic cosecant. http://mathworld.wolfram.com/HyperbolicCosecant.html
CSNG (function) returns the closest SINGLE value of a numerical value.
CSRLIN (function) returns the present PRINT cursor text row SCREEN coordinate position.
CVD (function) returns the DOUBLE numerical value of an 8 byte MKD$ string.
CVDMBF (function) returns the DOUBLE numerical value of a Microsoft Binary Format string.
_CV (function) converts any _MK$ STRING value to the designated numerical type value.
CVI (function) returns the INTEGER numerical value of a 2 byte MKI$ string.
CVL (function) returns the LONG numerical value of a 4 byte MKL$ string.
CVS (function) returns the SINGLE numerical value of a 4 byte MKS$ string.
CVSMBF (function) returns the SINGLE numerical value of a Microsoft Binary Format string. 
_CWD$ (function) returns the current working directory as a STRING value. 
_D2G (function) converts degrees to gradient angle values.
_D2R (function) converts degrees to radian angle values.
_DEFAULTCOLOR (function) returns the current default text color for an image handle or page.
_DESKTOPHEIGHT (function) returns the height of the desktop (not program window).
_DESKTOPWIDTH (function) returns the width of the desktop (not program window).
_DEVICE$ (function) returns a STRING expression listing a designated numbered input device name and types of input.
_DEVICEINPUT (function) returns the _DEVICES number of an _AXIS, _BUTTON or _WHEEL event.
_DEVICES (function) returns the number of input devices found on a computer system including the keyboard and mouse.
_DIREXISTS (function) returns -1 if the Directory folder name string parameter exists. Zero if it does not.
ENVIRON$ (function) returns a specified string setting or numerical position as an environmental STRING value.
EOF (file function) returns -1 when a file INPUT or GET has reached the end of a file.
ERDEV (function) returns an error code from the last device to create an error.
ERDEV$ (function) returns the 8 character name of the last device to declare an error as a string.
ERL (error function) returns the closest line number before an error occurred if line numbers are used.
ERR (function) returns the ERROR code when a program error occurs.
_ERRORLINE (function) returns the source code line number that caused the most recent runtime error.
_EXIT (function) prevents a user exit and indicates if a user has clicked the close X window button or CTRL + BREAK. 
EXP (function) returns the value of e to the exponential power specified. 
FILEATTR (function) returns the current file access mode.
_FILEEXISTS (function) returns -1 if the file name string parameter exists. Zero if it does not.
FIX (function) returns the rounded INTEGER value of a numerical value.
_FONTHEIGHT (function) returns the current text or font height.
_FONTWIDTH (function) returns the current text or font width.
FREEFILE (file function) returns a file number that is currently not in use by the Operating System.
FRE (function) returns the number of bytes of Memory available to running programs.
_G2D (function) converts gradient to degree angle values.
_G2R (function) converts gradient to radian angle values.
_GREEN32 (function) returns the green component intensity of a 32-bit color value. 
_GREEN (function) function returns the palette or the green component intensity of a 32-bit image color.
_HEIGHT (function) returns the height of a designated image handle.
HEX$ (function) returns the hexadecimal(base 16) STRING representation of a decimal INTEGER value. 
_HYPOT (function) Returns the hypotenuse of a right-angled triangle whose legs are x and y. 
INKEY$ (function) ASCII returns a string value entry from the keyboard.
INP (function) returns a numerical value from a specified port register address. See Keyboard scancodes
INPUT$ (function) returns a designated number of string bytes from the keyboard entry or a file number.
INSTR (function) returns the position in a text string where a character sequence match starts.
INT (function) rounds a numerical value to an INTEGER value by removing the decimal point fraction.
IOCTL$ (function) 
_KEYDOWN (function) returns whether CTRL, ALT, SHIFT, combinations and other keys are pressed. 
_KEYHIT (function) returns ASCII one and two byte, SDL Virtual Key and Unicode keyboard key press codes.
_LASTAXIS (function) returns the number of axis available on a specified number device listed by _DEVICE$.
_LASTBUTTON (function) returns the number of buttons available on a specified number device listed by DEVICE$.
_LASTWHEEL (function) returns the number of scroll wheels available on a specified number device listed by _DEVICE$.
LBOUND (function) returns the lower boundary of the specified array.
LCASE$ (function) returns the lower case value of a STRING.
LEFT$ (function) returns the specified number of text characters from the left end of a STRING.
LEN (function) returns the length or number of characters in a STRING value in bytes.
_LOADFONT (function) designates a font TTF file to load and returns a handle value.
_LOADIMAGE (function) designates an image file to load and returns a handle value. 
LOC (function) returns the present file byte position or number of bytes in the OPEN COM buffer.
LOF (function) returns the size of an OPEN file in bytes.
LOG (function) {{text|
LPOS (function) returns the printer head position.
LTRIM$ (function) returns a string value with no leading spaces. 
_MEMELEMENT (function) returns a _MEM block referring to a variable's memory (but not past it).
_MEMEXISTS (function) verifies that a memory block exists for a memory variable name or returns zero.
_MEMIMAGE (function) returns a _MEM block referring to a designated image handle's memory
_MEMNEW (function) allocates new memory with a designated SIZE and returns a _MEM block referring to it.
MKD$ (function) returns an 8 byte ASCII string representation of a DOUBLE numerical value.
MKDMBF$ (function) returns an 8 byte Microsoft Binary Format STRING representation of a DOUBLE numerical value.
_MK$ (function) converts a numerical value to a designated ASCII STRING value.
MKI$ (function) returns a 2 byte ASCII string representation of an INTEGER.
MKL$ (function) returns a 4 byte ASCII string representation of a LONG numerical value.
MKS$ (function) returns a 4 byte ASCII string representation of a SINGLE numerical value.
MKSMBF$ (function) returns an 8 byte Microsoft Binary Format STRING representation of a DOUBLE numerical value.
_MOUSEBUTTON (function) returns the status of a designated mouse button.
_MOUSEINPUT (function) returns a value if the mouse status has changed since the last read.
_MOUSEMOVEMENTX (function) returns the relative horizontal position of the mouse cursor compared to the previous position.
_MOUSEMOVEMENTY (function) returns the relative vertical position of the mouse cursor compared to the previous position.
_MOUSEWHEEL (function) returns the number of mouse scroll wheel "clicks" since last read.
_MOUSEX (function) returns the current horizontal position of the mouse cursor.
_MOUSEY (function) returns the current vertical position of the mouse cursor. 
_NEWIMAGE (function) creates a designated size program SCREEN or page image and returns a handle value. 
OCT$ (function) returns the octal(base 8) STRING representation of a decimal INTEGER value.
_OPENCLIENT (TCP/IP function) connects to a Host on the Internet as a Client and returns the Client status handle.
_OPENCONNECTION (TCP/IP function) open's a connection from a client that the host has detected and returns a status handle.
_OPENHOST (TCP/IP function) opens a Host and returns a Host status handle.
_OS$ (function) returns the QB64 compiler version in which the program was compiled as [WINDOWS], [LINUX] or [MACOSX] and [32BIT] or [64BIT]. 
PEEK (function) returns a numerical value from a specified segment address in memory.
PEN (function) returns requested information about the lightpen device used.
_PI (function) returns the value of π or parameter multiples for angle or circle calculations.
_PIXELSIZE (function) returns the pixel palette mode of a designated image handle.
PMAP (function) returns the physical or WINDOW view graphic coordinates.
POINT (function) returns the color attribute number or 32 bit _RGB32 value.
POS (function) returns the current text column position of the text cursor.
_PRINTWIDTH (function) returns the pixel width of a text string to be printed using _PRINTSTRING.
_R2D (function) converts radians to degree angle values.
_R2G (function) converts radians to gradient angle values.
_RED32 (function) returns the red component intensity of a 32-bit color value.
_RED (function) function returns the palette or the red component intensity of a 32-bit image color.
_RESIZEHEIGHT (function) returns the requested new user GL screen height when $RESIZE:ON allows it.
_RESIZEWIDTH (function) returns the requested new user GL screen width when $RESIZE:ON allows it.
_RGB32 (function) returns the LONG 32 bit color value in 32 bit screens only
_RGBA32 (function) returns the LONG 32 bit color value in 32 bit screens only with the ALPHA
_RGBA (function) returns the closest palette index OR the LONG 32 bit color value in 32 bit screens with the ALPHA
_RGB (function) returns the closest palette index OR the LONG 32 bit color value in 32 bit screens.
RIGHT$ (function) returns a specific number of text characters from the right end of a STRING.
RND (function) returns a random number value from 0 to .9999999.
_ROUND (function) rounds to the closest INTEGER, LONG or _INTEGER64 numerical value. 
RTRIM$ (function) returns a string with all spaces removed from the right end.
SADD (function) returns the address of a STRING variable as an offset from the current data segment.
_SCREENEXISTS (function) returns a -1 value once a screen has been created.
_SCREENIMAGE (function) creates an image of the current desktop and returns an image handle.
_SCREENX (function) returns the program window's upper left corner horizontal position on the desktop.
_SCREENY (function) returns the program window's upper left corner vertical position on the desktop. 
_SEC (function) the mathematical function secant defined by 1/COS. http://mathworld.wolfram.com/Secant.html
_SECH (function) Returns the hyperbolic secant. http://mathworld.wolfram.com/HyperbolicSecant.html
SETMEM (function) sets the memory to use.
SGN (function) returns -1 for negative, 0 for zero, and 1 for positive numerical values.
_SHELLHIDE (function) returns the code sent by a program exit using END or SYSTEM followed by an INTEGER value.
SIN (function) returns the sine of a radian angle.
_SINH (function) Returns the hyperbolic sine of x radians.
_SNDCOPY (function) copies a sound handle value to a new designated handle.
_SNDGETPOS (function) returns the current playing position in seconds from a sound file with the SETPOS capability.
_SNDLEN (function) returns the length of a sound in seconds from a sound file with the LEN capability.
_SNDOPEN (function) loads a sound file and returns a sound handle.
_SNDOPENRAW (GL function) opens a new channel to shove _SNDRAW content into without mixing.
_SNDPAUSED (function) returns the current pause status of a sound file handle.
_SNDPLAYING (function) returns the current playing status of a sound handle.
_SNDRATE (function) returns the sound card sample rate to set _SNDRAW durations.
_SNDRAWLEN (function) returns a value until the _SNDRAW buffer is empty.
SPACE$ (function) returns a designated number of spaces to a STRING.
SPC (function) moves the text cursor a number of spaces on the SCREEN.
SQR (function) returns the square root of a non-negative number.
_STARTDIR$ (function) returns the user's program calling path as a STRING.
STICK (function) returns the present joystick position.
_STRCMP (function) compares the relationship between two strings.
STR$ (function) returns a string value of a number with a leading space when it is positive.
_STRICMP (function) compares the relationship between two strings, without regard for case-sensitivity. 
STRIG (function) returns the joystick button press values when read.
STRING$ (function) returns a designated number of string characters.
TAB (function) moves a designated number of columns on the screen.
TAN (function) returns the ratio of SINe to COSine or tangent value of an angle measured in radians.
_TANH (function) Returns the hyperbolic tangent of x radians.
UBOUND (function) returns the upper-most index number of a designated array.
UCASE$ (function) returns an uppercase representation of a specified STRING.
VAL (function) returns the numerical value of a string number.
VARPTR (function) returns the segment pointer address in memory.
VARPTR$ (function) returns the string value of a numerical value in memory.
VARSEG (function) returns the segment address of a value in memory.
_WHEEL (function) returns -1 when a control device wheel is scrolled up and 1 when scrolled down. Zero indicates no activity.
_WIDTH (function) returns the width of a SCREEN or image handle. 
